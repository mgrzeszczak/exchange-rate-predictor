apply plugin: "com.moowork.node"
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.github.mgrzeszczak'
version = '1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.jetbrains:annotations:$jetbrainsAnnotationsVersion")
    implementation("io.reactivex.rxjava2:rxjava:$rxJavaVersion")
    implementation("org.yaml:snakeyaml:$snakeYamlVersion")
    implementation("com.squareup.retrofit2:retrofit:$retrofitVersion")
    implementation("com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion")
    implementation("com.squareup.retrofit2:converter-jackson:$retrofitVersion")
    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    runtime("com.h2database:h2")
    compileOnly("org.projectlombok:lombok:$lombokVersion")

    testImplementation("org.codehaus.groovy:groovy-backports-compat23:$groovyVersion")
    testImplementation("net.bytebuddy:byte-buddy:$byteBuddyVersion")
    testImplementation("org.spockframework:spock-spring:$spockVersion")
    testImplementation("org.spockframework:spock-core:$spockVersion")
    testImplementation("org.codehaus.groovy:groovy-all:$groovyVersion")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.projectreactor:reactor-test")
}



node {
    // Version of node to use.
    version = '8.9.1'

    // Version of npm to use.
    npmVersion = '5.5.1'

    // Version of Yarn to use.
    yarnVersion = '1.3.2'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")

    // Set the work directory for Yarn
    yarnWorkDir = file("${project.buildDir}/yarn")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/../frontend")
}

task copyFront(type: Copy) {
    from '../frontend/dist'
    into 'build/resources/main/static'
}

bootJar.dependsOn(yarn_build, yarn_install, copyFront)
yarn_build.mustRunAfter(yarn_install)
copyFront.mustRunAfter(yarn_build)

jar {
    manifest {
        attributes 'Implementation-Title': 'Exchange Rate Predictor',
                'Implementation-Version': version,
                'Main-Class': 'com.github.mgrzeszczak.erp.Application'
    }
}

